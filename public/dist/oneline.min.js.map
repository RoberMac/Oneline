{"version":3,"sources":["core.js","UI.js","timeline.js","tokenHelper.js","root.js","settings.js"],"names":["angular","module","config","$locationProvider","$stateProvider","$urlRouterProvider","$httpProvider","jwtInterceptorProvider","html5Mode","tokenGetter","localStorage","getItem","interceptors","push","otherwise","state","url","templateUrl","controller","factory","$cacheFactory","service","$resource","jwtHelper","store","this","addToken","newToken","provider","decodeToken","tokenList","get","util","removeToken","set","remove","clearToken","getProviderList","map","token","isValidToken","some","isTokenExpired","filter","$scope","$timeout","olTokenHelper","providerList","isTimeline","timelineProvider","updateProviderList","setTimeline","value","isAuth","indexOf","$window","$state","$stateParams","s","go","addEventListener","e","key","toggleAuth","open","Timeline","setTimelineProvider","settings","id","data","console","log"],"mappings":"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","file":"oneline.min.js","sourcesContent":["angular.module('Oneline', [\n    'ngTouch',\n    'ngAnimate',\n    'ngResource',\n    'ui.router',\n    'angular-jwt',\n    'angular-storage',\n    'Oneline.rootControllers',\n    'Oneline.settingsControllers',\n    'Oneline.timelineControllers',\n    'Oneline.timelineServices',\n    'Oneline.tokenHelperServices',\n    'Oneline.UIServices'\n])\n.config(['$locationProvider', '$stateProvider', \n    '$urlRouterProvider', '$httpProvider', 'jwtInterceptorProvider',\n    function($locationProvider, $stateProvider, \n        $urlRouterProvider, $httpProvider, jwtInterceptorProvider) {\n\n\n    $locationProvider.html5Mode(true)\n\n    // 配置每次請求攜帶 JWT\n    jwtInterceptorProvider.tokenGetter = function() {\n        return localStorage.getItem('tokenList')\n    }\n    $httpProvider.interceptors.push('jwtInterceptor')\n\n    $urlRouterProvider.otherwise('/')\n\n    $stateProvider\n        .state('settings', {\n            url: '/?s',  \n            templateUrl: '/public/dist/settings.min.html',\n            controller: 'settingsCtrl'\n        })\n        .state('timeline', {\n            url: \"/{provider:all|twitter|instagram|weibo}\",\n            templateUrl: '/public/dist/timeline.min.html',\n            controller: 'timelineCtrl'\n        })\n}])\n.factory('feedCache', ['$cacheFactory', function($cacheFactory){\n    return $cacheFactory('feedCache')\n}])","angular.module('Oneline.UIServices', [])\n.service('olUI', function(){\n\n})","angular.module('Oneline.timelineControllers', [])\n.controller('timelineCtrl', ['$scope', '$state', '$stateParams', 'store', 'Timeline', 'olTokenHelper',\n    function($scope, $state, $stateParams, store, Timeline, olTokenHelper){\n\n\n    /**\n     * 初始化\n     *     1. 判斷是否需要跳轉到「設置頁面」\n     *     2. 設置 `isTimeline` 為 `true`\n     *     3. 判斷是否需要設置「當前時間線上聚合的社交網站」\n     *     4. 初始化時間線\n     */\n    // 1\n    olTokenHelper.isValidToken()\n        ? null\n        : $state.go('settings', { settings: 'settings' })\n    // 2\n    $scope.setTimeline(true)\n    // 3\n    $scope.providerList.indexOf($stateParams.provider) >= 0 || $stateParams.provider === 'all'\n        ? setTimelineProvider($stateParams.provider)\n        : $state.go('timeline', { provider: store.get('timelineProvider') })\n    // 4\n    Timeline.get({id: 100}, function (data){\n        console.log(data)\n    })\n\n    /**\n     * 時間線操作\n     *\n     *\n     */\n\n\n    // 更改「當前時間線上聚合的社交網站」\n    function setTimelineProvider(provider){\n        store.set('timelineProvider', provider)\n        $state.go('timeline', { provider: provider })\n    }\n}])","angular.module('Oneline.tokenHelperServices', [])\n.service('olTokenHelper', ['jwtHelper', 'store', function(jwtHelper, store){\n\n\n    /* 添加 token */\n    this.addToken = function (){\n        var newToken  = localStorage.getItem('addToken'),\n            provider  = jwtHelper.decodeToken(newToken).provider,\n            tokenList = store.get('tokenList') || [];\n\n        // 刪除相同 provider 的 token\n        tokenList = util.removeToken(tokenList, provider)\n\n        tokenList.push(newToken)\n        store.set('tokenList', tokenList)\n\n        // 刪除 `addToken`\n        store.remove('addToken')\n    },\n    /* 刪除指定 provider 的 token */\n    this.removeToken = function (provider){\n        var tokenList = store.get('tokenList') || [];\n\n        tokenList = util.removeToken(tokenList, provider)\n\n        store.set('tokenList', tokenList)\n    },\n    /* 清空 token */\n    this.clearToken = function (){\n        store.remove('tokenList')\n    },\n    /* 獲取 provider 列表 */\n    this.getProviderList = function (){\n        var tokenList = store.get('tokenList') || [];\n        return tokenList.map(function (token){\n            return jwtHelper.decodeToken(token).provider\n        })\n    },\n    /* 驗證 token 是否有效 */\n    this.isValidToken = function (){\n        var tokenList = store.get('tokenList') || [];\n        \n        return tokenList.some(function (token){\n            return !jwtHelper.isTokenExpired(token)\n        })\n\n    }\n\n\n    // Util\n    var util = {\n        removeToken: function (tokenList, provider){\n            return tokenList.filter(function (token){\n                return provider !== jwtHelper.decodeToken(token).provider\n            })\n        }\n    }\n    \n}])","angular.module('Oneline.rootControllers', [])\n.controller('rootController', [\n        '$scope', '$timeout', 'store', 'olTokenHelper',\n    function ($scope, $timeout, store, olTokenHelper){\n\n\n    /**\n     * 初始化\n     *     1. 初始化「社交網站列表」\n     *     2. 初始化 `isTimeline` 的值\n     *     3. 設置「當前時間線上聚合的社交網站」\n     */\n    // 1\n    $scope.providerList = olTokenHelper.getProviderList()\n    // 2\n    $scope.isTimeline = false\n    // 3\n    $scope.timelineProvider = store.get('timelineProvider') || 'all'\n    store.set('timelineProvider', $scope.timelineProvider)\n\n\n    // 刷新「社交網站列表」\n    $scope.updateProviderList = function (){\n        $timeout(function (){\n            $scope.providerList = olTokenHelper.getProviderList()\n        })\n    }\n    // 設置當前是否為「時間線頁面」\n    $scope.setTimeline = function (value){\n        $scope.isTimeline = value\n    }\n    // 驗證 provider 是否已授權\n    $scope.isAuth = function (provider){\n        return $scope.providerList.indexOf(provider) >= 0\n    }\n}])","angular.module('Oneline.settingsControllers', [])\n.controller('settingsCtrl', ['$scope', '$window', '$state', '$stateParams', 'store', 'olTokenHelper', \n    function($scope, $window, $state, $stateParams, store, olTokenHelper){\n\n\n    /**\n     * 初始化\n     *     1. 判斷是否需要跳轉到「時間線頁面」\n     *     2. 設置 `isTimeline` 為 `false`\n     */\n    olTokenHelper.isValidToken() && $stateParams.s !== '1'\n        ? $state.go('timeline', { provider: store.get('timelineProvider') })\n        : null\n    $scope.setTimeline(false)\n\n    /**\n     * 跨標籤頁通信\n     *     監聽新標籤頁的 localStorage 存儲\n     *\n     */\n    $window.addEventListener('storage', function (e){\n        if (e.key !== 'addToken') return;\n\n        olTokenHelper.addToken()\n        $scope.updateProviderList()\n    })\n\n\n    // 添加／刪除「社交網站」授權\n    $scope.toggleAuth = function (provider){\n        if ($scope.providerList.indexOf(provider) < 0){\n            $window.open('/auth/' + provider + '/test', '_blank')\n            // $window.open('/auth/' + provider, '_blank')\n        } else {\n            olTokenHelper.removeToken(provider)\n            $scope.updateProviderList()\n        }\n    }\n\n}])"],"sourceRoot":"/source/"}