{"version":3,"sources":["core.js","UI.js","relativeDate.js","timeline.js","tokenHelper.js","root.js","settings.js"],"names":["angular","module","config","$locationProvider","$stateProvider","$urlRouterProvider","$httpProvider","jwtInterceptorProvider","html5Mode","tokenGetter","localStorage","getItem","interceptors","push","otherwise","state","url","templateUrl","controller","service","value","just_now","seconds_ago","a_minute_ago","minutes_ago","an_hour_ago","hours_ago","a_day_ago","days_ago","a_week_ago","weeks_ago","a_month_ago","months_ago","a_year_ago","years_ago","over_a_year_ago","seconds_from_now","a_minute_from_now","minutes_from_now","an_hour_from_now","hours_from_now","a_day_from_now","days_from_now","a_week_from_now","weeks_from_now","a_month_from_now","months_from_now","a_year_from_now","years_from_now","over_a_year_from_now","directive","$timeout","$filter","scope","elem","attrs","updateTime","text","time","delay","Date","parse","updateLater","timeoutPromise","relativeDate","bind","cancel","factory","$resource","jwtHelper","store","this","addToken","newToken","provider","decodeToken","tokenList","get","util","removeToken","set","remove","clearToken","getProviderList","map","token","isValidToken","some","isTokenExpired","filter","$scope","olTokenHelper","providerList","isTimeline","timelineProvider","updateProviderList","setTimeline","isAuth","indexOf","$window","$state","$stateParams","s","go","addEventListener","e","key","toggleAuth","open","Timeline","setTimelineProvider","settings","timelineData","query","data"],"mappings":"AAAAA,QAAQC,OAAO,WACX,UACA,YACA,aACA,YACA,cACA,kBACA,0BACA,8BACA,8BACA,2BACA,+BACA,8BACA,uBAEHC,QAAQ,oBAAqB,iBAC1B,qBAAsB,gBAAiB,yBACvC,SAASC,EAAmBC,EACxBC,EAAoBC,EAAeC,GAGvCJ,EAAkBK,WAAU,GAG5BD,EAAuBE,YAAc,WACjC,MAAOC,cAAaC,QAAQ,cAEhCL,EAAcM,aAAaC,KAAK,kBAEhCR,EAAmBS,UAAU,KAE7BV,EACKW,MAAM,YACHC,IAAK,MACLC,YAAa,iCACbC,WAAY,iBAEfH,MAAM,YACHC,IAAK,0CACLC,YAAa,iCACbC,WAAY;ACxCxBlB,QAAQC,OAAO,yBACdkB,QAAQ,OAAQ;ACDjBnB,QAAQC,OAAO,gCAAiC,iBAC/CmB,MAAM,4BACHC,SAAU,KACVC,YAAa,YACbC,aAAc,KACdC,YAAa,YACbC,YAAa,KACbC,UAAW,YACXC,UAAW,KACXC,SAAU,YACVC,WAAY,KACZC,UAAW,YACXC,YAAa,KACbC,WAAY,YACZC,WAAY,KACZC,UAAW,YACXC,gBAAiB,OAEjBC,iBAAkB,cAClBC,kBAAmB,OACnBC,iBAAkB,cAClBC,iBAAkB,OAClBC,eAAgB,cAChBC,eAAgB,OAChBC,cAAe,cACfC,gBAAiB,OACjBC,eAAgB,cAChBC,iBAAkB,OAClBC,gBAAiB,cACjBC,gBAAiB,OACjBC,eAAgB,cAChBC,qBAAsB,UAEzBC,UAAU,gBAAiB,WAAY,UAAW,SAAUC,EAAUC,GAEnE,MAAO,UAAUC,EAAOC,EAAMC,GAK1B,QAASC,KACLF,EAAKG,KAAKL,EAAQ,gBAAgBM,IAGtB,IAARC,GAAiB,GAAIC,MAASA,KAAKC,MAAMH,GAAQ,MACjDC,EAAQ,KAIhB,QAASG,KACLC,EAAiBZ,EAAS,WACtBK,IACAM,KACDH,GAjBP,GAEII,GAFAL,EAAQH,EAAMS,aACdL,EAAQ,GAmBZL,GAAKW,KAAK,WAAY,WAClBd,EAASe,OAAOH,KAGpBP,IACAM;AC7DR9D,QAAQC,OAAO,+BACdkE,QAAQ,YAAa,YAAa,SAASC,GAExC,MAAOA,GAAU;ACHrBpE,QAAQC,OAAO,kCACdkB,QAAQ,iBAAkB,YAAa,QAAS,SAASkD,EAAWC,GAIjEC,KAAKC,SAAW,WACZ,GAAIC,GAAY/D,aAAaC,QAAQ,YACjC+D,EAAYL,EAAUM,YAAYF,GAAUC,SAC5CE,EAAYN,EAAMO,IAAI,gBAG1BD,GAAYE,EAAKC,YAAYH,EAAWF,GAExCE,EAAU/D,KAAK4D,GACfH,EAAMU,IAAI,YAAaJ,GAGvBN,EAAMW,OAAO,aAGjBV,KAAKQ,YAAc,SAAUL,GACzB,GAAIE,GAAYN,EAAMO,IAAI,gBAE1BD,GAAYE,EAAKC,YAAYH,EAAWF,GAExCJ,EAAMU,IAAI,YAAaJ,IAG3BL,KAAKW,WAAa,WACdZ,EAAMW,OAAO,cAGjBV,KAAKY,gBAAkB,WACnB,GAAIP,GAAYN,EAAMO,IAAI,gBAC1B,OAAOD,GAAUQ,IAAI,SAAUC,GAC3B,MAAOhB,GAAUM,YAAYU,GAAOX,YAI5CH,KAAKe,aAAe,WAChB,GAAIV,GAAYN,EAAMO,IAAI,gBAE1B,OAAOD,GAAUW,KAAK,SAAUF,GAC5B,OAAQhB,EAAUmB,eAAeH,KAOzC,IAAIP,IACAC,YAAa,SAAUH,EAAWF,GAC9B,MAAOE,GAAUa,OAAO,SAAUJ,GAC9B,MAAOX,KAAaL,EAAUM,YAAYU,GAAOX;ACrDjE1E,QAAQC,OAAO,8BACdiB,WAAW,kBACJ,SAAU,WAAY,QAAS,gBACnC,SAAUwE,EAAQvC,EAAUmB,EAAOqB,GAUnCD,EAAOE,aAAeD,EAAcR,kBAEpCO,EAAOG,YAAa,EAEpBH,EAAOI,iBAAmBxB,EAAMO,IAAI,qBAAuB,MAC3DP,EAAMU,IAAI,mBAAoBU,EAAOI,kBAIrCJ,EAAOK,mBAAqB,WACxB5C,EAAS,WACLuC,EAAOE,aAAeD,EAAcR,qBAI5CO,EAAOM,YAAc,SAAU5E,GAC3BsE,EAAOG,WAAazE,GAGxBsE,EAAOO,OAAS,SAAUvB,GACtB,MAAOgB,GAAOE,aAAaM,QAAQxB,IAAa;ACjCxD1E,QAAQC,OAAO,kCACdiB,WAAW,gBAAiB,SAAU,UAAW,SAAU,eAAgB,QAAS,gBACjF,SAASwE,EAAQS,EAASC,EAAQC,EAAc/B,EAAOqB,GAQvDA,EAAcL,gBAAqC,MAAnBe,EAAaC,EACvCF,EAAOG,GAAG,YAAc7B,SAAUJ,EAAMO,IAAI,sBAC5C,KACNa,EAAOM,aAAY,GAOnBG,EAAQK,iBAAiB,UAAW,SAAUC,GAC5B,aAAVA,EAAEC,MAENf,EAAcnB,WACdkB,EAAOK,wBAKXL,EAAOiB,WAAa,SAAUjC,GACtBgB,EAAOE,aAAaM,QAAQxB,GAAY,EACxCyB,EAAQS,KAAK,SAAWlC,EAAW,QAAS,WAG5CiB,EAAcZ,YAAYL,GAC1BgB,EAAOK;AHnCnB/F,QAAQC,OAAO,kCACdiB,WAAW,gBAAiB,SAAU,SAAU,eAAgB,QAAS,WAAY,gBAClF,SAASwE,EAAQU,EAAQC,EAAc/B,EAAOuC,EAAUlB,GAkCxD,QAASmB,GAAoBpC,GACzBJ,EAAMU,IAAI,mBAAoBN,GAC9B0B,EAAOG,GAAG,YAAc7B,SAAUA,IAzBtCiB,EAAcL,eACR,KACAc,EAAOG,GAAG,YAAcQ,SAAU,aAExCrB,EAAOM,aAAY,GAEnBN,EAAOE,aAAaM,QAAQG,EAAa3B,WAAa,GAA+B,QAA1B2B,EAAa3B,SAClEoC,EAAoBT,EAAa3B,UACjC0B,EAAOG,GAAG,YAAc7B,SAAUJ,EAAMO,IAAI,sBAElDa,EAAOsB,gBACPH,EAASI,MAAM,SAAUC,GACrBxB,EAAOsB,aAAeE","file":"oneline.min.js","sourcesContent":["angular.module('Oneline', [\n    'ngTouch',\n    'ngAnimate',\n    'ngResource',\n    'ui.router',\n    'angular-jwt',\n    'angular-storage',\n    'Oneline.rootControllers',\n    'Oneline.settingsControllers',\n    'Oneline.timelineControllers',\n    'Oneline.timelineServices',\n    'Oneline.relativeDateServices',\n    'Oneline.tokenHelperServices',\n    'Oneline.UIServices'\n])\n.config(['$locationProvider', '$stateProvider', \n    '$urlRouterProvider', '$httpProvider', 'jwtInterceptorProvider',\n    function($locationProvider, $stateProvider, \n        $urlRouterProvider, $httpProvider, jwtInterceptorProvider) {\n\n\n    $locationProvider.html5Mode(true)\n\n    // 配置每次請求攜帶 JWT\n    jwtInterceptorProvider.tokenGetter = function() {\n        return localStorage.getItem('tokenList')\n    }\n    $httpProvider.interceptors.push('jwtInterceptor')\n\n    $urlRouterProvider.otherwise('/')\n\n    $stateProvider\n        .state('settings', {\n            url: '/?s',  \n            templateUrl: '/public/dist/settings.min.html',\n            controller: 'settingsCtrl'\n        })\n        .state('timeline', {\n            url: \"/{provider:all|twitter|instagram|weibo}\",\n            templateUrl: '/public/dist/timeline.min.html',\n            controller: 'timelineCtrl'\n        })\n}])","angular.module('Oneline.UIServices', [])\n.service('olUI', function(){\n\n})","angular.module('Oneline.relativeDateServices', ['relativeDate'])\n.value('relativeDateTranslations', {\n    just_now: '0s',\n    seconds_ago: '{{time}}s',\n    a_minute_ago: '1m',\n    minutes_ago: '{{time}}m',\n    an_hour_ago: '1h',\n    hours_ago: '{{time}}h',\n    a_day_ago: '1d',\n    days_ago: '{{time}}d',\n    a_week_ago: '1w',\n    weeks_ago: '{{time}}w',\n    a_month_ago: '1M',\n    months_ago: '{{time}}M',\n    a_year_ago: '1y',\n    years_ago: '{{time}}y',\n    over_a_year_ago: '> 1y',\n    // Useless\n    seconds_from_now: '+ {{time}}s',\n    a_minute_from_now: '+ 1m',\n    minutes_from_now: '+ {{time}}m',\n    an_hour_from_now: '+ 1h',\n    hours_from_now: '+ {{time}}h',\n    a_day_from_now: '+ 1d',\n    days_from_now: '+ {{time}}d',\n    a_week_from_now: '+ 1w',\n    weeks_from_now: '+ {{time}}w',\n    a_month_from_now: '+ 1M',\n    months_from_now: '+ {{time}}M',\n    a_year_from_now: '+ 1y',\n    years_from_now: '+ {{time}}y',\n    over_a_year_from_now: '++ 1y'\n})\n.directive('relativeDate', ['$timeout', '$filter', function ($timeout, $filter){\n\n    return function (scope, elem, attrs){\n        var time  = attrs.relativeDate,\n            delay = 1000,\n            timeoutPromise;\n\n        function updateTime(){\n            elem.text($filter('relativeDate')(time))\n\n            // 降低刷新速率\n            if (delay < 60000 && new Date() - Date.parse(time) > 60000){\n                delay = 60000\n            }\n        }\n\n        function updateLater (){\n            timeoutPromise = $timeout(function (){\n                updateTime()\n                updateLater()\n            }, delay)\n        }\n\n        elem.bind('$destroy', function() {\n            $timeout.cancel(timeoutPromise);\n        })\n\n        updateTime()\n        updateLater()\n    }\n\n}])","angular.module('Oneline.timelineControllers', [])\n.controller('timelineCtrl', ['$scope', '$state', '$stateParams', 'store', 'Timeline', 'olTokenHelper',\n    function($scope, $state, $stateParams, store, Timeline, olTokenHelper){\n\n\n    /**\n     * 初始化\n     *     1. 判斷是否需要跳轉到「設置頁面」\n     *     2. 設置 `isTimeline` 為 `true`\n     *     3. 判斷是否需要設置「當前時間線上聚合的社交網站」\n     *     4. 初始化時間線\n     */\n    // 1\n    olTokenHelper.isValidToken()\n        ? null\n        : $state.go('settings', { settings: 'settings' })\n    // 2\n    $scope.setTimeline(true)\n    // 3\n    $scope.providerList.indexOf($stateParams.provider) >= 0 || $stateParams.provider === 'all'\n        ? setTimelineProvider($stateParams.provider)\n        : $state.go('timeline', { provider: store.get('timelineProvider') })\n    // 4\n    $scope.timelineData = []\n    Timeline.query(function (data){\n        $scope.timelineData = data\n    })\n\n    /**\n     * 時間線操作\n     *\n     *\n     */\n\n\n    // 更改「當前時間線上聚合的社交網站」\n    function setTimelineProvider(provider){\n        store.set('timelineProvider', provider)\n        $state.go('timeline', { provider: provider })\n    }\n}])","angular.module('Oneline.tokenHelperServices', [])\n.service('olTokenHelper', ['jwtHelper', 'store', function(jwtHelper, store){\n\n\n    /* 添加 token */\n    this.addToken = function (){\n        var newToken  = localStorage.getItem('addToken'),\n            provider  = jwtHelper.decodeToken(newToken).provider,\n            tokenList = store.get('tokenList') || [];\n\n        // 刪除相同 provider 的 token\n        tokenList = util.removeToken(tokenList, provider)\n\n        tokenList.push(newToken)\n        store.set('tokenList', tokenList)\n\n        // 刪除 `addToken`\n        store.remove('addToken')\n    },\n    /* 刪除指定 provider 的 token */\n    this.removeToken = function (provider){\n        var tokenList = store.get('tokenList') || [];\n\n        tokenList = util.removeToken(tokenList, provider)\n\n        store.set('tokenList', tokenList)\n    },\n    /* 清空 token */\n    this.clearToken = function (){\n        store.remove('tokenList')\n    },\n    /* 獲取 provider 列表 */\n    this.getProviderList = function (){\n        var tokenList = store.get('tokenList') || [];\n        return tokenList.map(function (token){\n            return jwtHelper.decodeToken(token).provider\n        })\n    },\n    /* 驗證 token 是否有效 */\n    this.isValidToken = function (){\n        var tokenList = store.get('tokenList') || [];\n        \n        return tokenList.some(function (token){\n            return !jwtHelper.isTokenExpired(token)\n        })\n\n    }\n\n\n    // Util\n    var util = {\n        removeToken: function (tokenList, provider){\n            return tokenList.filter(function (token){\n                return provider !== jwtHelper.decodeToken(token).provider\n            })\n        }\n    }\n    \n}])","angular.module('Oneline.rootControllers', [])\n.controller('rootController', [\n        '$scope', '$timeout', 'store', 'olTokenHelper',\n    function ($scope, $timeout, store, olTokenHelper){\n\n\n    /**\n     * 初始化\n     *     1. 初始化「社交網站列表」\n     *     2. 初始化 `isTimeline` 的值\n     *     3. 設置「當前時間線上聚合的社交網站」\n     */\n    // 1\n    $scope.providerList = olTokenHelper.getProviderList()\n    // 2\n    $scope.isTimeline = false\n    // 3\n    $scope.timelineProvider = store.get('timelineProvider') || 'all'\n    store.set('timelineProvider', $scope.timelineProvider)\n\n\n    // 刷新「社交網站列表」\n    $scope.updateProviderList = function (){\n        $timeout(function (){\n            $scope.providerList = olTokenHelper.getProviderList()\n        })\n    }\n    // 設置當前是否為「時間線頁面」\n    $scope.setTimeline = function (value){\n        $scope.isTimeline = value\n    }\n    // 驗證 provider 是否已授權\n    $scope.isAuth = function (provider){\n        return $scope.providerList.indexOf(provider) >= 0\n    }\n}])","angular.module('Oneline.settingsControllers', [])\n.controller('settingsCtrl', ['$scope', '$window', '$state', '$stateParams', 'store', 'olTokenHelper', \n    function($scope, $window, $state, $stateParams, store, olTokenHelper){\n\n\n    /**\n     * 初始化\n     *     1. 判斷是否需要跳轉到「時間線頁面」\n     *     2. 設置 `isTimeline` 為 `false`\n     */\n    olTokenHelper.isValidToken() && $stateParams.s !== '1'\n        ? $state.go('timeline', { provider: store.get('timelineProvider') })\n        : null\n    $scope.setTimeline(false)\n\n    /**\n     * 跨標籤頁通信\n     *     監聽新標籤頁的 localStorage 存儲\n     *\n     */\n    $window.addEventListener('storage', function (e){\n        if (e.key !== 'addToken') return;\n\n        olTokenHelper.addToken()\n        $scope.updateProviderList()\n    })\n\n\n    // 添加／刪除「社交網站」授權\n    $scope.toggleAuth = function (provider){\n        if ($scope.providerList.indexOf(provider) < 0){\n            $window.open('/auth/' + provider + '/test', '_blank')\n            // $window.open('/auth/' + provider, '_blank')\n        } else {\n            olTokenHelper.removeToken(provider)\n            $scope.updateProviderList()\n        }\n    }\n\n}])"],"sourceRoot":"/source/"}